{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    toast.error(\"An unexpected error occured\");\n  }\n\n  logger.log(error);\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  patch: axios.patch,\n  setJwt\n};","map":{"version":3,"sources":["/home/swapnil/Desktop/React/vidly/src/components/services/httpService.js"],"names":["axios","toast","logger","interceptors","response","use","error","expectedError","status","log","Promise","reject","setJwt","jwt","defaults","headers","common","get","post","put","delete","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEAF,KAAK,CAACG,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAuCC,KAAD,IAAW;AAC/C,QAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;;AAIA,MAAI,CAACD,aAAL,EAAoB;AAClBN,IAAAA,KAAK,CAACK,KAAN,CAAY,6BAAZ;AACD;;AACDJ,EAAAA,MAAM,CAACO,GAAP,CAAWH,KAAX;AACA,SAAOI,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD,CAVD;;AAWA,SAASM,MAAT,CAAgBC,GAAhB,EAAqB;AACnBb,EAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDH,GAAhD;AACD;;AAED,eAAe;AACbI,EAAAA,GAAG,EAAEjB,KAAK,CAACiB,GADE;AAEbC,EAAAA,IAAI,EAAElB,KAAK,CAACkB,IAFC;AAGbC,EAAAA,GAAG,EAAEnB,KAAK,CAACmB,GAHE;AAIbC,EAAAA,MAAM,EAAEpB,KAAK,CAACoB,MAJD;AAKbC,EAAAA,KAAK,EAAErB,KAAK,CAACqB,KALA;AAMbT,EAAAA;AANa,CAAf","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n  if (!expectedError) {\n    toast.error(\"An unexpected error occured\");\n  }\n  logger.log(error);\n  return Promise.reject(error);\n});\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  patch: axios.patch,\n  setJwt,\n};\n"]},"metadata":{},"sourceType":"module"}