{"ast":null,"code":"var _jsxFileName = \"/home/swapnil/Desktop/React/vidly/src/components/common/loginForm.jsx\";\nimport React from \"react\";\nimport Joi, { errors } from \"joi-browser\";\nimport Form from \"./form\";\nimport { login } from \"../services/authServices\";\n\nclass LoginForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().label(\"Username\"),\n      password: Joi.string().required().label(\"Password\")\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const {\n          data: jwt\n        } = await login(this.state.data.username, this.state.data.password);\n        console.log(jwt);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors\n          };\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"username\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderButton(\"Login\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/swapnil/Desktop/React/vidly/src/components/common/loginForm.jsx"],"names":["React","Joi","errors","Form","login","LoginForm","state","data","username","password","schema","string","required","label","doSubmit","jwt","console","log","ex","response","status","setState","render","handleSubmit","renderInput","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,MAAd,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,QAAsB,0BAAtB;;AAEA,MAAMC,SAAN,SAAwBF,IAAxB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OADA;AAENP,MAAAA,MAAM,EAAE;AAFF,KADmB;AAAA,SAM3BQ,MAN2B,GAMlB;AACPF,MAAAA,QAAQ,EAAEP,GAAG,CAACU,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,UAA9B,CADH;AAEPJ,MAAAA,QAAQ,EAAER,GAAG,CAACU,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,UAA9B;AAFH,KANkB;;AAAA,SAW3BC,QAX2B,GAWhB,YAAY;AACrB,UAAI;AACF,cAAM;AAAEP,UAAAA,IAAI,EAAEQ;AAAR,YAAgB,MAAMX,KAAK,CAC/B,KAAKE,KAAL,CAAWC,IAAX,CAAgBC,QADe,EAE/B,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,QAFe,CAAjC;AAIAO,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAND,CAME,OAAOG,EAAP,EAAW;AACX,YAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+C;AAC7C,gBAAMlB,MAAM,GAAG,EAAE,GAAG,KAAKI,KAAL,CAAWJ;AAAhB,WAAf;AACAA,UAAAA,MAAM,CAACM,QAAP,GAAkBU,EAAE,CAACC,QAAH,CAAYZ,IAA9B;AACA,eAAKc,QAAL,CAAc;AAAEnB,YAAAA;AAAF,WAAd;AACD;AACF;AACF,KAzB0B;AAAA;;AA2B3BoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,UAAzC,CAFH,EAGG,KAAKC,YAAL,CAAkB,OAAlB,CAHH,CAFF,CADF;AAUD;;AAtC0B;;AAyC7B,eAAepB,SAAf","sourcesContent":["import React from \"react\";\nimport Joi, { errors } from \"joi-browser\";\nimport Form from \"./form\";\nimport { login } from \"../services/authServices\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data: jwt } = await login(\n        this.state.data.username,\n        this.state.data.password\n      );\n      console.log(jwt);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}