{"ast":null,"code":"var _jsxFileName = \"/home/swapnil/Desktop/React/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"./services/fakeMovieServices\";\nimport { getGenres } from \"./services/fakeGenreServices\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./common/moviesTable\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: getMovies(),\n      pageSize: 4,\n      currentPage: 1,\n      genres: [],\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      console.log(movie);\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = path => {\n      const sortColumn = { ...this.state.sortColumn\n      };\n      if (sortColumn === path) sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";else {\n        sortColumn.path = path;\n        sortColumn.order = \"asc\";\n      }\n      this.setState({\n        sortColumn\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allmovies,\n      sortColumn\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, \"There are no movies in the database.\");\n    const filtered = selectedGenre && selectedGenre._id ? allmovies.filter(m => m.genre._id === selectedGenre._id) : allmovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      items: this.state.genres,\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Showing \", filtered.length, \" movies in the database.\"), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: filtered.length,\n      pageSize: pageSize,\n      onPageChange: this.handlePageChange,\n      currentPage: currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/home/swapnil/Desktop/React/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","_","Movies","state","movies","pageSize","currentPage","genres","sortColumn","path","order","handleDelete","movie","console","log","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","componentDidMount","name","render","length","count","allmovies","filtered","sorted","orderBy"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"./services/fakeMovieServices\";\nimport { getGenres } from \"./services/fakeGenreServices\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./common/moviesTable\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: getMovies(),\n    pageSize: 4,\n    currentPage: 1,\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n  componentDidMount() {\n    const genres = [{ name: \"All Genres\" }, ...getGenres()];\n\n    this.setState({ genres });\n  }\n  handleDelete = (movie) => {\n    console.log(movie);\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n  handleSort = (path) => {\n    const sortColumn = { ...this.state.sortColumn };\n    if (sortColumn === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.setState({ sortColumn });\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allmovies,\n      sortColumn,\n    } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allmovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allmovies;\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <p>Showing {filtered.length} movies in the database.</p>\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={filtered.length}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}