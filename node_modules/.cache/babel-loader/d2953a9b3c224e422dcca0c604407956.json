{"ast":null,"code":"import _classCallCheck from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import _ from\"lodash\";var TableBody=/*#__PURE__*/function(_Component){_inherits(TableBody,_Component);var _super=_createSuper(TableBody);function TableBody(){var _this;_classCallCheck(this,TableBody);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderCell=function(item,column){if(column.content)return column.content(item);return _.get(item,column.path);};return _this;}_createClass(TableBody,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,data=_this$props.data,columns=_this$props.columns;return/*#__PURE__*/React.createElement(\"tbody\",null,data.map(function(item){return/*#__PURE__*/React.createElement(\"tr\",{key:item._id},columns.map(function(column){return/*#__PURE__*/React.createElement(\"td\",{key:item._id+(column.path||column.key)},_this2.renderCell(item,column));}));}));}}]);return TableBody;}(Component);export default TableBody;","map":{"version":3,"sources":["/home/swapnil/Desktop/React/vidly/src/components/common/tableBody.jsx"],"names":["React","Component","_","TableBody","renderCell","item","column","content","get","path","props","data","columns","map","_id","key"],"mappings":"glBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,C,GACMC,CAAAA,S,uUACJC,U,CAAa,SAACC,IAAD,CAAOC,MAAP,CAAkB,CAC7B,GAAIA,MAAM,CAACC,OAAX,CAAoB,MAAOD,CAAAA,MAAM,CAACC,OAAP,CAAeF,IAAf,CAAP,CACpB,MAAOH,CAAAA,CAAC,CAACM,GAAF,CAAMH,IAAN,CAAYC,MAAM,CAACG,IAAnB,CAAP,CACD,C,4EAEQ,iCACmB,KAAKC,KADxB,CACCC,IADD,aACCA,IADD,CACOC,OADP,aACOA,OADP,CAGP,mBACE,iCACGD,IAAI,CAACE,GAAL,CAAS,SAACR,IAAD,qBACR,0BAAI,GAAG,CAAEA,IAAI,CAACS,GAAd,EACGF,OAAO,CAACC,GAAR,CAAY,SAACP,MAAD,qBACX,0BAAI,GAAG,CAAED,IAAI,CAACS,GAAL,EAAYR,MAAM,CAACG,IAAP,EAAeH,MAAM,CAACS,GAAlC,CAAT,EACG,MAAI,CAACX,UAAL,CAAgBC,IAAhB,CAAsBC,MAAtB,CADH,CADW,EAAZ,CADH,CADQ,EAAT,CADH,CADF,CAaD,C,uBAtBqBL,S,EAyBxB,cAAeE,CAAAA,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={item._id + (column.path || column.key)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}