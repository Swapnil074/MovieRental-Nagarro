{"ast":null,"code":"import _objectSpread from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/swapnil/Desktop/React/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{getMovies,deleteMovies}from\"./services/movieService\";import{getGenres}from\"./services/genreService\";import Pagination from\"./common/pagination\";import{paginate}from\"../utils/paginate\";import ListGroup from\"./common/listGroup\";import MoviesTable from\"./common/moviesTable\";import _ from\"lodash\";import{Link}from\"react-router-dom\";import SearchBox from\"./common/search\";import{toast}from\"react-toastify\";var Movies=/*#__PURE__*/function(_Component){_inherits(Movies,_Component);var _super=_createSuper(Movies);function Movies(){var _this;_classCallCheck(this,Movies);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={movies:getMovies(),pageSize:4,currentPage:1,genres:[],sortColumn:{path:\"title\",order:\"asc\"},searchQuery:\"\",selectedGenre:null};_this.handleDelete=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(movie){var originalMovies,movies;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:originalMovies=_this.state.movies;movies=originalMovies.filter(function(m){return m._id!==movie._id;});_this.setState({movies:movies});_context.prev=3;_context.next=6;return deleteMovies(movie._id);case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](3);if(_context.t0.response&&_context.t0.response.status===404)toast.error(\"This movie has already been deleted.\");_this.setState({movies:originalMovies});case 12:case\"end\":return _context.stop();}}},_callee,null,[[3,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this.handleLike=function(movie){var movies=_toConsumableArray(_this.state.movies);var index=movies.indexOf(movie);movies[index]=_objectSpread({},movies[index]);movies[index].liked=!movies[index].liked;_this.setState({movies:movies});};_this.handlePageChange=function(page){_this.setState({currentPage:page});};_this.handleGenreSelect=function(genre){_this.setState({selectedGenre:genre,searchQuery:\"\",currentPage:1});};_this.handleSort=function(sortColumn){_this.setState({sortColumn:sortColumn});};_this.handleSearch=function(query){_this.setState({searchQuery:query,selectedGenre:null,currentPage:1});};_this.getPagedDate=function(){var _this$state=_this.state,pageSize=_this$state.pageSize,currentPage=_this$state.currentPage,selectedGenre=_this$state.selectedGenre,allmovies=_this$state.movies,sortColumn=_this$state.sortColumn;var filtered=allmovies;if(_this.state.searchQuery)filtered=allmovies.filter(function(m){return m.title.toLowerCase().startsWith(_this.state.searchQuery.toLowerCase());});else if(selectedGenre&&selectedGenre._id)filtered=allmovies.filter(function(m){return m.genre._id===selectedGenre._id;});var sorted=_.orderBy(filtered,[sortColumn.path],[sortColumn.order]);var movies=paginate(sorted,currentPage,pageSize);return{totalCount:filtered.length,data:movies};};return _this;}_createClass(Movies,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$getGenres,data,genres,_yield$getMovies,movies;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getGenres();case 2:_yield$getGenres=_context2.sent;data=_yield$getGenres.data;genres=[{name:\"All Genres\"}].concat(_toConsumableArray(data));_context2.next=7;return getMovies();case 7:_yield$getMovies=_context2.sent;movies=_yield$getMovies.data;this.setState({movies:movies,genres:genres});case 10:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var count=this.state.movies.length;var _this$state2=this.state,pageSize=_this$state2.pageSize,currentPage=_this$state2.currentPage,sortColumn=_this$state2.sortColumn;var user=this.props.user;if(count===0)return/*#__PURE__*/React.createElement(\"p\",null,\"There are no movies in the database.\");var _this$getPagedDate=this.getPagedDate(),totalCount=_this$getPagedDate.totalCount,movies=_this$getPagedDate.data;return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-3\"},/*#__PURE__*/React.createElement(ListGroup,{items:this.state.genres,selectedItem:this.state.selectedGenre,onItemSelect:this.handleGenreSelect})),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},user&&/*#__PURE__*/React.createElement(Link,{to:\"/movies/new\",className:\"btn btn-primary\",style:{marginBottom:20}},\"New Movie\"),/*#__PURE__*/React.createElement(\"p\",null,\"Showing \",totalCount,\" movies in the database.\"),/*#__PURE__*/React.createElement(SearchBox,{value:this.state.searchQuery,onChange:this.handleSearch}),/*#__PURE__*/React.createElement(MoviesTable,{movies:movies,sortColumn:sortColumn,onLike:this.handleLike,onDelete:this.handleDelete,onSort:this.handleSort}),/*#__PURE__*/React.createElement(Pagination,{itemsCount:totalCount,pageSize:pageSize,onPageChange:this.handlePageChange,currentPage:currentPage})));}}]);return Movies;}(Component);export default Movies;","map":{"version":3,"sources":["/home/swapnil/Desktop/React/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","deleteMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","_","Link","SearchBox","toast","Movies","state","movies","pageSize","currentPage","genres","sortColumn","path","order","searchQuery","selectedGenre","handleDelete","movie","originalMovies","filter","m","_id","setState","response","status","error","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedDate","allmovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","name","count","user","props","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies, deleteMovies } from \"./services/movieService\";\nimport { getGenres } from \"./services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./common/moviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/search\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: getMovies(),\n    pageSize: 4,\n    currentPage: 1,\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n    searchQuery: \"\",\n    selectedGenre: null,\n  };\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovies(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  getPagedDate = () => {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allmovies,\n      sortColumn,\n    } = this.state;\n\n    let filtered = allmovies;\n    if (this.state.searchQuery)\n      filtered = allmovies.filter((m) =>\n        m.title.toLowerCase().startsWith(this.state.searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allmovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn } = this.state;\n    const { user } = this.props;\n    if (count === 0) return <p>There are no movies in the database.</p>;\n    const { totalCount, data: movies } = this.getPagedDate();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox\n            value={this.state.searchQuery}\n            onChange={this.handleSearch}\n          />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}