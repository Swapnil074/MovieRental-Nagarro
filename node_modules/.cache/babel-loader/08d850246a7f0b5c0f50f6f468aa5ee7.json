{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/swapnil/Desktop/Projects/VIdly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies, deleteMovies } from \"./services/movieService\";\nimport { getGenres } from \"./services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./common/moviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/search\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: getMovies(),\n      pageSize: 4,\n      currentPage: 1,\n      genres: [],\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      },\n      searchQuery: \"\",\n      selectedGenre: null\n    };\n\n    this.handleDelete = async movie => {\n      const originalMovies = this.state.movies;\n      const movies = originalMovies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n\n      try {\n        await deleteMovies(movie._id);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) toast.error(\"This movie has already been deleted.\");\n        this.setState({\n          movies: originalMovies\n        });\n      }\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.getPagedDate = () => {\n      const {\n        pageSize,\n        currentPage,\n        selectedGenre,\n        movies: allmovies,\n        sortColumn\n      } = this.state;\n      let filtered = allmovies;\n      if (this.state.searchQuery) filtered = allmovies.filter(m => m.title.toLowerCase().startsWith(this.state.searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allmovies.filter(m => m.genre._id === selectedGenre._id);\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data\n    } = await getGenres();\n    const genres = [{\n      name: \"All Genres\"\n    }, ...data];\n    const {\n      data: movies\n    } = await getMovies();\n    this.setState({\n      movies,\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn\n    } = this.state;\n    const {\n      user\n    } = this.props;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedDate();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [user && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies/new\",\n          className: \"btn btn-primary\",\n          style: {\n            marginBottom: 20\n          },\n          children: \"New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", totalCount, \" movies in the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          value: this.state.searchQuery,\n          onChange: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          sortColumn: sortColumn,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          onPageChange: this.handlePageChange,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/home/swapnil/Desktop/Projects/VIdly/src/components/movies.jsx"],"names":["React","Component","getMovies","deleteMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","_","Link","SearchBox","toast","Movies","state","movies","pageSize","currentPage","genres","sortColumn","path","order","searchQuery","selectedGenre","handleDelete","movie","originalMovies","filter","m","_id","setState","ex","response","status","error","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedDate","allmovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","user","props","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies, deleteMovies } from \"./services/movieService\";\nimport { getGenres } from \"./services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./common/moviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/search\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: getMovies(),\n    pageSize: 4,\n    currentPage: 1,\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n    searchQuery: \"\",\n    selectedGenre: null,\n  };\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovies(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  getPagedDate = () => {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allmovies,\n      sortColumn,\n    } = this.state;\n\n    let filtered = allmovies;\n    if (this.state.searchQuery)\n      filtered = allmovies.filter((m) =>\n        m.title.toLowerCase().startsWith(this.state.searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allmovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn } = this.state;\n    const { user } = this.props;\n    if (count === 0) return <p>There are no movies in the database.</p>;\n    const { totalCount, data: movies } = this.getPagedDate();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox\n            value={this.state.searchQuery}\n            onChange={this.handleSearch}\n          />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}