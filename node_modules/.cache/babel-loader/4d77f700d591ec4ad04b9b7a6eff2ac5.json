{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/swapnil/Desktop/Projects/VIdly/src/components/movieForms.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getGenres } from \"./services/genreService\";\nimport { getMovie } from \"./services/movieService\";\nimport { saveMovie } from \"./services/movieService\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: \"\",\n        genreId: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\"\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      numberInStock: Joi.number().min(0).max(10).required().label(\"Number In Stock\"),\n      dailyRentalRate: Joi.number().required().label(\"Daily Rental Rate\"),\n      genreId: Joi.string().required().label(\"Genre \")\n    };\n\n    this.doSubmit = async () => {\n      //call the server\n      await saveMovie(this.state.data);\n      this.props.history.push(\"/movies\");\n    };\n  }\n\n  async populateGenres() {\n    const {\n      data: genres\n    } = await getGenres();\n    this.setState({\n      genres\n    });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      const {\n        data: movie\n      } = await getMovie(movieId);\n      this.setState({\n        data: this.mapToViewModel(movie)\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInstock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"title\", \"Title\"), this.renderSelect(\"genreId\", \"Genre\", this.state.genres), this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\"), this.renderInput(\"dailyRentalRate\", \"Rate\"), this.renderButton(\"Save\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/home/swapnil/Desktop/Projects/VIdly/src/components/movieForms.jsx"],"names":["React","Joi","Form","getGenres","getMovie","saveMovie","MovieForm","state","data","title","genreId","numberInStock","dailyRentalRate","genres","errors","schema","_id","string","required","label","number","min","max","doSubmit","props","history","push","populateGenres","setState","populateMovie","movieId","match","params","id","movie","mapToViewModel","ex","response","status","replace","componentDidMount","genre","numberInstock","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AACA,MAAMC,SAAN,SAAwBJ,IAAxB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,OAAO,EAAE,EAAtB;AAA0BC,QAAAA,aAAa,EAAE,EAAzC;AAA6CC,QAAAA,eAAe,EAAE;AAA9D,OADA;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADmB;AAAA,SAO3BC,MAP2B,GAOlB;AACPC,MAAAA,GAAG,EAAEf,GAAG,CAACgB,MAAJ,EADE;AAEPR,MAAAA,KAAK,EAAER,GAAG,CAACgB,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,OAA9B,CAFA;AAGPR,MAAAA,aAAa,EAAEV,GAAG,CAACmB,MAAJ,GACZC,GADY,CACR,CADQ,EAEZC,GAFY,CAER,EAFQ,EAGZJ,QAHY,GAIZC,KAJY,CAIN,iBAJM,CAHR;AAQPP,MAAAA,eAAe,EAAEX,GAAG,CAACmB,MAAJ,GAAaF,QAAb,GAAwBC,KAAxB,CAA8B,mBAA9B,CARV;AASPT,MAAAA,OAAO,EAAET,GAAG,CAACgB,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,QAA9B;AATF,KAPkB;;AAAA,SAkD3BI,QAlD2B,GAkDhB,YAAY;AACrB;AACA,YAAMlB,SAAS,CAAC,KAAKE,KAAL,CAAWC,IAAZ,CAAf;AACA,WAAKgB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KAtD0B;AAAA;;AAmB3B,QAAMC,cAAN,GAAuB;AACrB,UAAM;AAAEnB,MAAAA,IAAI,EAAEK;AAAR,QAAmB,MAAMV,SAAS,EAAxC;AACA,SAAKyB,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AACD;;AAED,QAAMgB,aAAN,GAAsB;AACpB,QAAI;AACF,YAAMC,OAAO,GAAG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;AACA,UAAIH,OAAO,KAAK,KAAhB,EAAuB;AACvB,YAAM;AAAEtB,QAAAA,IAAI,EAAE0B;AAAR,UAAkB,MAAM9B,QAAQ,CAAC0B,OAAD,CAAtC;AACA,WAAKF,QAAL,CAAc;AAAEpB,QAAAA,IAAI,EAAE,KAAK2B,cAAL,CAAoBD,KAApB;AAAR,OAAd;AACD,KALD,CAKE,OAAOE,EAAP,EAAW;AACX,UAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EACE,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,OAAnB,CAA2B,YAA3B;AACH;AACF;;AACD,QAAMC,iBAAN,GAA0B;AACxB,UAAM,KAAKb,cAAL,EAAN;AACA,UAAM,KAAKE,aAAL,EAAN;AACD;;AAEDM,EAAAA,cAAc,CAACD,KAAD,EAAQ;AACpB,WAAO;AACLlB,MAAAA,GAAG,EAAEkB,KAAK,CAAClB,GADN;AAELP,MAAAA,KAAK,EAAEyB,KAAK,CAACzB,KAFR;AAGLC,MAAAA,OAAO,EAAEwB,KAAK,CAACO,KAAN,CAAYzB,GAHhB;AAILL,MAAAA,aAAa,EAAEuB,KAAK,CAACQ,aAJhB;AAKL9B,MAAAA,eAAe,EAAEsB,KAAK,CAACtB;AALlB,KAAP;AAOD;;AAQD+B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACG,KAAKC,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,CADH,EAEG,KAAKC,YAAL,CAAkB,SAAlB,EAA6B,OAA7B,EAAsC,KAAKvC,KAAL,CAAWM,MAAjD,CAFH,EAGG,KAAKgC,WAAL,CAAiB,eAAjB,EAAkC,iBAAlC,EAAqD,QAArD,CAHH,EAIG,KAAKA,WAAL,CAAiB,iBAAjB,EAAoC,MAApC,CAJH,EAKG,KAAKE,YAAL,CAAkB,MAAlB,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AArE0B;;AAuE7B,eAAezC,SAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getGenres } from \"./services/genreService\";\nimport { getMovie } from \"./services/movieService\";\nimport { saveMovie } from \"./services/movieService\";\nclass MovieForm extends Form {\n  state = {\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    numberInStock: Joi.number()\n      .min(0)\n      .max(10)\n      .required()\n      .label(\"Number In Stock\"),\n    dailyRentalRate: Joi.number().required().label(\"Daily Rental Rate\"),\n    genreId: Joi.string().required().label(\"Genre \"),\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInstock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = async () => {\n    //call the server\n    await saveMovie(this.state.data);\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}