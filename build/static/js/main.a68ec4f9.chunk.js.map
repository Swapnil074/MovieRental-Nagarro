{"version":3,"sources":["components/services/logService.js","components/services/httpService.js","components/services/authServices.js","components/common/navBar.jsx","components/services/movieService.js","components/services/genreService.js","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/moviesTable.jsx","components/common/search.jsx","components/movies.jsx","components/customers.jsx","components/Rentals.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForms.jsx","components/common/loginForm.jsx","components/services/userService.js","components/registerForm.jsx","components/common/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","toast","logger","Promise","reject","get","post","put","delete","patch","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","tokenKey","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","NavBar","user","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","name","movieUrl","getMovies","getMovie","movieId","deleteMovies","saveMovie","movie","_id","body","getGenres","Pagination","props","itemsCount","pageSize","currentPage","pagesCount","Math","ceil","pages","_","range","map","page","key","onClick","onPageChange","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","Like","classes","liked","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","lable","Component","TableBody","renderCell","content","Table","MoviesTable","title","onLike","deleteColumn","onDelete","auth","isAdmin","push","movies","SearchBox","onChange","query","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","getPagedDate","allmovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Customers","Rentals","NotFound","Input","label","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","numberInstock","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","register","RegisterForm","Logout","ProtectedRoute","component","render","App","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a68ec4f9.chunk.js","sourcesContent":["function init() {}\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n  if (!expectedError) {\n    toast.error(\"An unexpected error occured\");\n  }\n  logger.log(error);\n  return Promise.reject(error);\n});\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  patch: axios.patch,\n  setJwt,\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  logout,\n  getCurrentUser,\n  loginWithJwt,\n  getJwt,\n};\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n            Movies\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/movies/\";\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function deleteMovies(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n  http.post(apiEndpoint, movie);\n}\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nexport const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n];\n\nexport function getGenres() {\n  return http.get(apiUrl + \"/genres\");\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => props.onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  onItemSelect,\n  selectedItem,\n}) => {\n  return (\n    <ul>\n      {items.map((item) => (\n        <li\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n          onClick={() => onItemSelect(item)}\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"id\",\n};\n\nexport default ListGroup;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.lable} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={item._id + (column.path || column.key)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Like from \"./like\";\nimport Table from \"./table\";\nimport auth from \"../services/authServices\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      lable: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", lable: \"Genre\" },\n    { path: \"numberInStock\", lable: \"Stock\" },\n    { path: \"dailyRentalRate\", lable: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      ),\n    },\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: (movie) => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    ),\n  };\n\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\n  }\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        onSort={onSort}\n        sortColumn={sortColumn}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text name=\"\n      query\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    ></input>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { getMovies, deleteMovies } from \"./services/movieService\";\nimport { getGenres } from \"./services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./common/moviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/search\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: getMovies(),\n    pageSize: 4,\n    currentPage: 1,\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n    searchQuery: \"\",\n    selectedGenre: null,\n  };\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovies(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  getPagedDate = () => {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allmovies,\n      sortColumn,\n    } = this.state;\n\n    let filtered = allmovies;\n    if (this.state.searchQuery)\n      filtered = allmovies.filter((m) =>\n        m.title.toLowerCase().startsWith(this.state.searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allmovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn } = this.state;\n    const { user } = this.props;\n    if (count === 0) return <p>There are no movies in the database.</p>;\n    const { totalCount, data: movies } = this.getPagedDate();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox\n            value={this.state.searchQuery}\n            onChange={this.handleSearch}\n          />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={(name, label)}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\"></input>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map((option) => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.error };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getGenres } from \"./services/genreService\";\nimport { getMovie } from \"./services/movieService\";\nimport { saveMovie } from \"./services/movieService\";\nclass MovieForm extends Form {\n  state = {\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    numberInStock: Joi.number()\n      .min(0)\n      .max(10)\n      .required()\n      .label(\"Number In Stock\"),\n    dailyRentalRate: Joi.number().required().label(\"Daily Rental Rate\"),\n    genreId: Joi.string().required().label(\"Genre \"),\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInstock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = async () => {\n    //call the server\n    await saveMovie(this.state.data);\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\nexport default MovieForm;\n","import React from \"react\";\nimport Joi, { errors } from \"joi-browser\";\nimport Form from \"./form\";\nimport auth from \"../services/authServices\";\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      await auth.login(this.state.data.username, this.state.data.password);\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/users\";\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name,\n  });\n}\n","import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport { register } from \"./services/userService\";\nimport auth from \"./services/authServices\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {},\n  };\n  schema = {\n    username: Joi.string().email().required().label(\"Username\"),\n    password: Joi.string().min(5).required().label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  doSubmit = async () => {\n    try {\n      const response = await register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      this.props.history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\", \"email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from \"react\";\nimport auth from \"../services/authServices\";\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport auth from \"../services/authServices\";\nimport { Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport auth from \"./components/services/authServices\";\nimport NavBar from \"./components/common/navBar\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/Rentals\";\nimport NotFound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForms\";\nimport LoginForm from \"./components/common/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/common/logout\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Route path=\"/logout\" component={Logout} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}